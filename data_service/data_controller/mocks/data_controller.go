// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/sahil/go/src/github.com/mta-hosting-optimizer/data_service/data_controller/data_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data_controller "github.com/mta-hosting-optimizer/data_service/data_controller"
)

// MockIDataController is a mock of IDataController interface.
type MockIDataController struct {
	ctrl     *gomock.Controller
	recorder *MockIDataControllerMockRecorder
}

// MockIDataControllerMockRecorder is the mock recorder for MockIDataController.
type MockIDataControllerMockRecorder struct {
	mock *MockIDataController
}

// NewMockIDataController creates a new mock instance.
func NewMockIDataController(ctrl *gomock.Controller) *MockIDataController {
	mock := &MockIDataController{ctrl: ctrl}
	mock.recorder = &MockIDataControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDataController) EXPECT() *MockIDataControllerMockRecorder {
	return m.recorder
}

// GetServerData mocks base method.
func (m *MockIDataController) GetServerData(arg0 *data_controller.GetServerDatRequest) (*data_controller.GetServerDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServerData", arg0)
	ret0, _ := ret[0].(*data_controller.GetServerDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServerData indicates an expected call of GetServerData.
func (mr *MockIDataControllerMockRecorder) GetServerData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServerData", reflect.TypeOf((*MockIDataController)(nil).GetServerData), arg0)
}
