// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/sahil/go/src/github.com/mta-hosting-optimizer/mta_hosting_optimizer_service/mta_optimizer_controller/mta_optimzer_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	mta_optimizer_controller "github.com/mta-hosting-optimizer/mta_hosting_optimizer_service/mta_optimizer_controller"
)

// MockIMtaOptimizerController is a mock of IMtaOptimizerController interface.
type MockIMtaOptimizerController struct {
	ctrl     *gomock.Controller
	recorder *MockIMtaOptimizerControllerMockRecorder
}

// MockIMtaOptimizerControllerMockRecorder is the mock recorder for MockIMtaOptimizerController.
type MockIMtaOptimizerControllerMockRecorder struct {
	mock *MockIMtaOptimizerController
}

// NewMockIMtaOptimizerController creates a new mock instance.
func NewMockIMtaOptimizerController(ctrl *gomock.Controller) *MockIMtaOptimizerController {
	mock := &MockIMtaOptimizerController{ctrl: ctrl}
	mock.recorder = &MockIMtaOptimizerControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMtaOptimizerController) EXPECT() *MockIMtaOptimizerControllerMockRecorder {
	return m.recorder
}

// GetUnderUtilizedHost mocks base method.
func (m *MockIMtaOptimizerController) GetUnderUtilizedHost(arg0 *gin.Context, arg1 *mta_optimizer_controller.GetUnderUtilizedHostRequest) (*mta_optimizer_controller.GetUnderUtilizedHostResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUnderUtilizedHost", arg0, arg1)
	ret0, _ := ret[0].(*mta_optimizer_controller.GetUnderUtilizedHostResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUnderUtilizedHost indicates an expected call of GetUnderUtilizedHost.
func (mr *MockIMtaOptimizerControllerMockRecorder) GetUnderUtilizedHost(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUnderUtilizedHost", reflect.TypeOf((*MockIMtaOptimizerController)(nil).GetUnderUtilizedHost), arg0, arg1)
}
